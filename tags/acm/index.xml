<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>ACM - Tag - Coding Panda&#39;s Blog</title>
    <link>https://zhiwayzhang.github.io/tags/acm/</link>
    <description>ACM - Tag - Coding Panda&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>zhiweizhang@hust.edu.cn (Zhiwei Zhang)</managingEditor>
      <webMaster>zhiweizhang@hust.edu.cn (Zhiwei Zhang)</webMaster><lastBuildDate>Mon, 21 Nov 2022 09:46:56 &#43;0800</lastBuildDate><atom:link href="https://zhiwayzhang.github.io/tags/acm/" rel="self" type="application/rss+xml" /><item>
  <title>WHUT新生赛游记（二）</title>
  <link>https://zhiwayzhang.github.io/posts/newwhutacm/</link>
  <pubDate>Mon, 21 Nov 2022 09:46:56 &#43;0800</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/newwhutacm/</guid>
  <description><![CDATA[大四老狗为什么还写新生赛游记呢，怎么回事呢，怎么回事呢
Day 0 体测日，大三一年基本上是没怎么练跑步的，去年在女朋友监督下练了好久1000米摸到了及格线4'19，今年跑了5'00，还算能接受吧，以为能将将凑够50分毕业吧，结果50米垃了，9.7，明天早上再去润个50米，不然真毕不了业了。
Day 1 比赛日，早上七点半爬起来去体测，跑了个8.9，行了吧，也是可以及格了，遂赶紧带着装机u盘去了机房配环境。
不得不说，WHUT计算机学院的机房是一言难尽的，大二那年在管院办校赛，机器配置极其豪华，配环境的话可以直接分发系统，线路比较新分发也很快，计算机学院的机房如果搞分发估计要大半夜，而且主要是管实验室的老师不同意，只能拿着批处理一台一台的配。
配环境的中途发现很多机器突然开不起来了，预估坏了20台，抢救也没抢救过来，虽然机器也够用，但是1001机房背后就是轰鸣的服务器，很容易影响选手的发挥。上午又得知因为余家头校区出了小阳人，三十多个选手无法到场，虽然缓解了机房的压力，但是造成了分开参赛的情况，余区选手通过PTA线上参赛和监考，南湖这边还是线下，赶紧发了通知允许选手自带键盘，尽量保证体验一致吧然而线上没有零食吃。
志愿者人手感觉明显不太够，搞了一上午感觉就累的不行，好歹是准备工作都弄好了，比赛开始之后OJ也没出锅，这一点已经让我很高兴了。下午突然想解决一下PTA这边榜单的问题，有个学弟搞了一下domjudge的滚榜，赛后可以查看封榜后的实时提交和排名变化，来点区预赛的那种氛围。所以就是想把PTA那边的提交整合过来。目测了一下感觉可写，赶紧抓个包瞅瞅，写了大概一个多小时，直接导出了PTA里所有的提交，全部写SQL INSERT到OJ里面，榜单整合就成功了。然而没注意PTA那边给的接口LIMIT做了限制，请求的时候写了LIMIT=600，实际上response里上限就是100条，结果最后只导入成功了100条，这时候已经比赛结束30分钟了。于是打算赶紧搞一个榜单出来直接发奖了。
整体上还是有挺多遗憾的，榜单合并没及时搞好，滚榜没及时搞好，感觉还是自己没注意做好测试工作，所以说一定要做好测试。晚上回去顺便带了点零食，然后有把榜单整合了一下，微调了一下基本没问题了，学弟把滚榜也搞好了。然而一切还是来的太突然了，突入其来的yq防控打乱了很多事，不过最后的结果还是很不错的，又一年新生赛圆满结束了。
从大一参加新生赛，大二给新生赛出题，大三拉到老东家夜莺的赞助举办了一次线下新生赛（极其豪华的线下赛），再到大四举办的最后一次新生赛，前前后后忙了不少工作，从台前到幕后，一次次活动中也学到了不少东西，认识了很多优秀的同学，最后感谢所有志愿者同志们的付出吧。
Return 0 ]]></description>
</item>
<item>
  <title>Luogu3964-松鼠聚会</title>
  <link>https://zhiwayzhang.github.io/posts/luogu3964/</link>
  <pubDate>Sun, 11 Oct 2020 19:45:39 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/luogu3964/</guid>
  <description><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3964"target="_blank" rel="external nofollow noopener noreferrer">Luogu3964</a></p>
<h2 id="description">Description</h2>
<p>草原上住着一群小松鼠，每个小松鼠都有一个家。时间长了，大家觉得应该聚一聚。但是草原非常大，松鼠们都很头疼应该在谁家聚会才最合理。
每个小松鼠的家可以用一个点$(x,y)$表示,两个点的距离定义为点 $(x,y)$ 和它周围的8个点 $(x-1,y)，(x+1,y),(x,y-1)，(x,y+1)$
$(x−1,y+1),(x-1,y-1),(x+1,y+1),(x+1,y-1)$距离为1。输出一个整数，表示松鼠为了聚会走的路程和最小是多少。</p>]]></description>
</item>
<item>
  <title>51nod3143-切比雪夫距离与曼哈顿距离</title>
  <link>https://zhiwayzhang.github.io/posts/51nod3143/</link>
  <pubDate>Sun, 11 Oct 2020 19:45:25 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/51nod3143/</guid>
  <description><![CDATA[<p><a href="https://www.51nod.com/Challenge/Problem.html#problemId=3143"target="_blank" rel="external nofollow noopener noreferrer">51nod3143</a></p>
<h2 id="description">Description</h2>
<p>n位战士即将奔赴战场，他们每个人都有一个攻击值ai和一个防御值bi，现在你想设计一种装备给这n位战士，如果这件装备的攻击值为A，防御值为B，那么对于第i位战士这件装备的不匹配度为$max(|A−a_i|,|B−b_i|)$
A，B都是正整数，要让所有战士的不匹配度之和最小，求出最小的不匹配度之和$2\le N \le 100000$</p>]]></description>
</item>
<item>
  <title>莫队-小B的询问洛谷P2709</title>
  <link>https://zhiwayzhang.github.io/posts/modui/</link>
  <pubDate>Wed, 07 Oct 2020 22:04:49 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/modui/</guid>
  <description><![CDATA[Description P2709 小B 有一个长为n的整数序列$a$，值域为$[1,k]$。 他一共有m个询问，每个询问给定一个区间$[l,r]$ 求：$\sum_{i=1}^k c_i^2$ 其中 $c_i$ 表示数字 $i$ 在$[l,r]$ 中的出现次数。 小B请你帮助他回答询问。
Solution 莫队算法板子题 mark
Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;string&gt; #include &lt;queue&gt; #include &lt;cmath&gt; #include &lt;map&gt; #include &lt;set&gt; #define mem(a,b) memset(a,b,sizeof(a)) #define debug cout&lt;&lt;0&lt;&lt;endl #define ll long long const int MAXN = 5e4 + 10; const int MOD = 1e9 + 7; using namespace std; struct Q{ int l, r, k; } q[MAXN]; int N, M, K; int pos[MAXN], a[MAXN], cnt[MAXN]; ll ans[MAXN]; ll res; inline void Add(int n) { cnt[a[n]]++; res += 2ll*cnt[a[n]] - 1; } inline void Sub(int n) { cnt[a[n]]--; res -= 2ll*cnt[a[n]] + 1; } int main() { ios::sync_with_stdio(false); cin.]]></description>
</item>
<item>
  <title>GCD-兔八哥与猎人</title>
  <link>https://zhiwayzhang.github.io/posts/gcd/</link>
  <pubDate>Wed, 07 Oct 2020 22:04:23 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/gcd/</guid>
  <description><![CDATA[Description 兔八哥躲藏在树林旁边的果园里。果园有M × N棵树，组成一个M行N列的矩阵，水平或垂直相邻的两棵树的距离为1。兔八哥在一棵果树下。 猎人背着猎枪走进了果园，他爬上一棵果树，准备杀死兔八哥。 如果猎人与兔八哥之间没有其它的果树，猎人就可以看到兔八哥。 现己知猎人和兔八哥的位置，编写程序判断兔子所在的位置是否安全. 输入：　第一行为n，表示有n(n ≤ 100,000)组数据，每组数据的第一行为两个正整数ax和ay，表示猎人的位置，第二行为两个正整数bx和by，表示兔八哥的位置(1 ≤ ax, ay, bx, by ≤ 100,000,000)。 输出： 共有n行，每行为“yes”或“no”表示兔八哥的位置是否安全。
Solution 容易想到，兔八哥和猎人只要连线上无整数点即可，可以转化成$|a_x - b_x| 和 |a_y - b_y|$互质，即$gcd(|a_x - b_x|,|a_y - b_y|)=1$
Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include&lt;bits/stdc++.h&gt; #define mem(a,b) memset(a,b,sizeof(a)) typedef long long ll; typedef unsigned long long ull; using namespace std; inline int gcd(int a, int b) { return b == 0 ?]]></description>
</item>
<item>
  <title>统计硬币-递推/DP</title>
  <link>https://zhiwayzhang.github.io/posts/cntcoin/</link>
  <pubDate>Wed, 07 Oct 2020 22:04:23 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/cntcoin/</guid>
  <description><![CDATA[Description HDU 2566 假设一堆由1分、2分、5分组成的n个硬币总面值为m分，求一共有多少种可能的组合方式（某种面值的硬币可以数量可以为0）。
Solution 坑题，没给数据范围，只能瞎猜，一发搜索挂掉发现无法去重，但是考虑到该问题满足从1开始分配并无后效性，可以直接递推（类似背包），三种物品可选任意次
Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include&lt;bits/stdc++.h&gt; #define mem(a,b) memset(a,b,sizeof(a)) typedef long long ll; typedef unsigned long long ull; using namespace std; int main() { //freopen(&#34;test.txt&#34;, &#34;r&#34;, stdin); ios::sync_with_stdio(false); int N, M; int ans;	int dp[2000][2000]; int n[] = {1,2,5}; cin.]]></description>
</item>
<item>
  <title>余数求和-整除分块</title>
  <link>https://zhiwayzhang.github.io/posts/divide/</link>
  <pubDate>Wed, 07 Oct 2020 21:47:20 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/divide/</guid>
  <description><![CDATA[Description 给出整数$n,k$,计算$G(n,k)=\sum\limits_{i=1}^n=k \ mod \ i$,$1&lt;=n,k&lt;=1e9$
Solution 将k mod i展开可以得到$k - i*\lfloor \frac{k}{i} \rfloor$ 将求和式子展开可以得到$ \sum\limits_{i=1}^n = nk-\sum\limits_{i=1}^n i * \lfloor\frac{k}{i} \rfloor $ 利用整除分块，可以发现，对于相同的$\lfloor\frac{k}{i} \rfloor$，即每个区间$l 到 r$，每次只需要再对i求和即可 即每次计算$(r-l+1)\lfloor \frac{k}{i} \rfloor * (l+r)/2$
Note 在分块的时候误写为r=N/(N/i)导致调试耽误大量时间，而且交了四发才发现
1 2 3 4 5 6 7 for (ll l = 1, r; l &lt;= N; l = r + 1) { if (l &gt; K) { break; } r = min(N, K/(K/l)); ans -= (r - l + 1)*(K/l)*(l + r)/2; } Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 //https://www.]]></description>
</item>
<item>
  <title>计算几何-平行四边形</title>
  <link>https://zhiwayzhang.github.io/posts/jsjh/</link>
  <pubDate>Wed, 13 May 2020 22:05:25 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/jsjh/</guid>
  <description><![CDATA[Description 求平面上n个点构成的平行四边形个数。 输入 一行一个数n。 接下来n行，每行两个数x,y，表示这个点的坐标为(x,y)。 保证任意两点不重合，任意三点不共线。 输出 一行一个整数表示平行四边形个数。
Solution 按照平行四边形的性质，两组顶点的中点重合，可以统计出每组顶点的中点，再统计每个顶点的个数，排列组合一下
Note 第一发对于顶点的统计出锅了，排序条件写错，提交都要检查排序]]></description>
</item>
<item>
  <title>Fibonacci 矩阵快速幂</title>
  <link>https://zhiwayzhang.github.io/posts/fibmatrix/</link>
  <pubDate>Fri, 13 Dec 2019 18:58:24 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/fibmatrix/</guid>
  <description><![CDATA[Description 请输出$Fib(n) mod 10000$ $n \leq 1000000000$
Solution 由于$n$的范围在$1e9$直接递推铁TLE，考虑矩阵快速幂 Fibonacci数列有如下性质 通过多次迭代 算是个板子题吧，记得在WUST新生赛做过一道想矩阵快速幂的题，然而正解是找规律QAQ，在此贴个板子。
Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 #include &lt;cstdio&gt; #include &lt;queue&gt; #include &lt;algorithm&gt; #include &lt;iostream&gt; #include &lt;queue&gt; #include &lt;cstring&gt; #include &lt;string&gt; typedef long long LL; const int MOD = 1e4; using namespace std; struct Matrix{ LL m[2][2]; void print(){ for (int i = 0; i &lt; 2; i++) { for (int j = 0; j &lt; 2; j++) cout &lt;&lt; m[i][j] &lt;&lt; &#39; &#39;; cout &lt;&lt; endl;	} } } base, ans; Matrix times(Matrix a, Matrix b) { Matrix ans; ans.]]></description>
</item>
<item>
  <title>Triangle Fibonacci&#43;二分查找</title>
  <link>https://zhiwayzhang.github.io/posts/fib/</link>
  <pubDate>Fri, 13 Dec 2019 18:58:14 &#43;0000</pubDate>
  <author>Zhiwei Zhang</author>
  <guid>https://zhiwayzhang.github.io/posts/fib/</guid>
  <description><![CDATA[Description 有$n$个木棍，长度为$1,2,3&hellip;n$，现在要从中删掉一些木棍，使得剩下的木棍不能构成三角形，使删掉木棍的数量最少。T组数组，$T \leq 20$ $n \leq 20$
Solution 由于数据范围很小，可以直接暴力求解，依次选取两个数$a,b(a&lt;b)$相加，要知道不能有任何一个数小于这个值，直接删掉$(a,a+b)$范围中的数即可 如果$n$的范围是$1e9$呢？ 通过找规律发现我们剩下的数是这样的 $1,2,3,5,8,13,21&hellip;$ 这是Fibonacci数列!!!! 所以我们只需要找到$\leq n$的Fibonacci数有几个，减去就是答案 可以直接lower_bound注意处理极限数据！！！即$n==1||n==2$的情况 也可手写二分，但是二分貌似常数有点大，又考虑到第$88$个Fibonacci数就爆掉$1e9$了，所以直接便利也完全没问题
Code 暴力版本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;string&gt; #include &lt;cstring&gt; #include &lt;queue&gt; using namespace std; bool vis[23]; int main() { int T; cin &gt;&gt; T; for (int i = 1; i &lt;= T; i++) { int N, ans = 0; cin &gt;&gt; N; memset(vis, false, sizeof(vis)); for (int j = 1; j &lt;= N - 1; j++) if (!]]></description>
</item>
</channel>
</rss>
